name: Release

on:
  push:
    branches: main

jobs:

  amd64_job:

    name: Build Linux amd64
    runs-on:  ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve linux version
      run: echo "FB_LINUX_VERSION=v$(awk -F, '/^linux,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

    - name: Print version
      run: echo "FB_LINUX = ${{ env.FB_LINUX_VERSION }}"

    - name: Download and compile FB for Linux amd64
      run: |
        mkdir -p target/fb/tmp
        mkdir -p $GITHUB_WORKSPACE/artifact
        sudo add-apt-repository ppa:george-edison55/cmake-3.x
        sudo apt-get update && \
          sudo apt-get install -y --no-install-recommends \
          build-essential \
          cmake \
          make \
          wget \
          flex \
          libasl-dev \
          libsasl2-dev \
          pkg-config \
          libsystemd-dev \
          zlib1g-dev \
          ca-certificates \
          bison
        sudo apt-get upgrade cmake
        pushd target/fb/tmp
        wget https://github.com/fluent/fluent-bit/archive/"${FB_LINUX_VERSION}".tar.gz
        mkdir -p $FB_LINUX_VERSION
        tar -xzf $FB_LINUX_VERSION.tar.gz -C $FB_LINUX_VERSION --strip-components 1 || true
        pushd ${{ env.FB_LINUX_VERSION }}/build
        cmake ..
        make
        pushd bin
        tar -czf $GITHUB_WORKSPACE/artifact/nrfb-linux-amd64.tar.gz fluent-bit

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifact/nrfb-linux-amd64.tar.gz

  arm64_job:

    name: Build Linux arm64
    runs-on:  ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve linux version
      run: echo "FB_LINUX_VERSION=v$(awk -F, '/^linux,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

    - name: Print version
      run: echo "FB_LINUX = ${{ env.FB_LINUX_VERSION }}"

    - name: Download and compile FB for Linux arm64
      uses: uraimo/run-on-arch-action@v2.0.5
      with:
        arch: aarch64
        distro: ubuntu16.04
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        env: |
          linuxVersion: ${{ env.FB_LINUX_VERSION }}
        run: |
          mkdir -p artifact
          apt-get update && \
          apt-get install -y --no-install-recommends \
          build-essential \
          cmake \
          make \
          wget \
          flex \
          libasl-dev \
          libsasl2-dev \
          pkg-config \
          libsystemd-dev \
          zlib1g-dev \
          ca-certificates \
          bison
          wget https://github.com/fluent/fluent-bit/archive/"${linuxVersion}".tar.gz
          mkdir -p $linuxVersion
          tar -xzf $linuxVersion.tar.gz -C $linuxVersion --strip-components 1 || true
          pushd $linuxVersion/build
          cmake ..
          make
          pushd bin
          tar -czf ../../../artifact/nrfb-linux-arm64.tar.gz fluent-bit

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifact/nrfb-linux-arm64.tar.gz

  arm_job:

    name: Build Linux arm
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve linux version
      run: echo "FB_LINUX_VERSION=v$(awk -F, '/^linux,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

    - name: Print version
      run: echo "FB_LINUX = ${{ env.FB_LINUX_VERSION }}"

    - name: Download and compile FB for Linux arm
      uses: uraimo/run-on-arch-action@v2.0.5
      with:
        arch: armv7
        distro: ubuntu16.04
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        env: |
          linuxVersion: ${{ env.FB_LINUX_VERSION }}
        run: |
          mkdir -p artifact
          apt-get update && \
          apt-get install -y --no-install-recommends \
          build-essential \
          cmake \
          make \
          wget \
          flex \
          libasl-dev \
          libsasl2-dev \
          pkg-config \
          libsystemd-dev \
          zlib1g-dev \
          ca-certificates \
          bison
          wget https://github.com/fluent/fluent-bit/archive/"${linuxVersion}".tar.gz
          mkdir -p $linuxVersion
          tar -xzf $linuxVersion.tar.gz -C $linuxVersion --strip-components 1 || true
          pushd $linuxVersion/build
          cmake ..
          make
          pushd bin

            tar -czf ../../../artifact/nrfb-linux-arm.tar.gz fluent-bit

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: artifact/nrfb-linux-arm.tar.gz

  win32:

    name: Build Windows 386
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve win version
      run: echo "FB_WIN_VERSION=$(awk -F, '/^windows,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

    - name: Print version
      run: echo "FB_WIN= ${{ env.FB_WIN_VERSION}}"

    - name: Download FB for windows32 & create artifact
      run: |
        rm -rf target/fb
        mkdir -p target/fb/tmp
        mkdir -p $GITHUB_WORKSPACE/artifact
        pushd target/fb/tmp
        FLUENT_BIT_RELEASE=$(cut -d. -f1-2 <<< "${FB_WIN_VERSION}")
        wget "http://fluentbit.io/releases/${FLUENT_BIT_RELEASE}/td-agent-bit-${FB_WIN_VERSION}-win32".zip
        unzip td-agent-bit-${FB_WIN_VERSION}-win32.zip
        zip -r -j $GITHUB_WORKSPACE/artifact/nrfb-windows-386.zip td-agent-bit-${FB_WIN_VERSION}-win32/bin

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifact/nrfb-windows-386.zip

  win64:

    name: Build Windows amd64
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Retrieve win version
      run: echo "FB_WIN_VERSION=$(awk -F, '/^windows,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

    - name: Print version
      run: echo "FB_WIN= ${{ env.FB_WIN_VERSION}}"

    - name: Download FB for windows64 & create artifact
      run: |
        rm -rf target/fb
        mkdir -p target/fb/tmp
        mkdir -p $GITHUB_WORKSPACE/artifact
        pushd target/fb/tmp
        FLUENT_BIT_RELEASE=$(cut -d. -f1-2 <<< "${FB_WIN_VERSION}")
        wget "http://fluentbit.io/releases/${FLUENT_BIT_RELEASE}/td-agent-bit-${FB_WIN_VERSION}-win64".zip
        unzip td-agent-bit-${FB_WIN_VERSION}-win64.zip
        zip -r -j $GITHUB_WORKSPACE/artifact/nrfb-windows-amd64.zip td-agent-bit-${FB_WIN_VERSION}-win64/bin

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: artifact/nrfb-windows-amd64.zip

  publish:

    name: Publish artifact as assets
    runs-on: ubuntu-16.04
    needs: [amd64_job, arm_job, arm64_job, win32, win64]

    steps:
    - uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./

    - name: Display structure of downloaded files
      run: |
            ls -R
            pwd

    - name: Retrieve versions
      run: |
        echo "FB_LINUX_VERSION=v$(awk -F, '/^linux,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV
        echo "FB_WIN_VERSION=$(awk -F, '/^windows,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV
        echo "NRFB_ARTIFACT_VERSION=$(awk -F, '/^artifact,/ {print $2}' nr_fb_version)"  >> $GITHUB_ENV

    - name: Print versions
      run: |
        echo "FB_LINUX: ${{ env.FB_LINUX_VERSION }}"
        echo "FB_WIN: ${{ env.FB_WIN_VERSION}}"
        echo "NR ARTIFACT: ${{ env.NRFB_ARTIFACT_VERSION }}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NRFB_ARTIFACT_VERSION }}
        release_name: nrfb v${{ env.NRFB_ARTIFACT_VERSION }}
        body: |
          Included into this Release
          - FluentBit Linux Version: ${{ env.FB_LINUX_VERSION }}
          - FluentBit Windows Version: v${{ env.FB_WIN_VERSION}}
        draft: false
        prerelease: false

    - name: Upload Linux amd64 Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/nrfb-linux-amd64.tar.gz
        asset_name: fb-linux-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Linux arm64 Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/nrfb-linux-arm64.tar.gz
        asset_name: fb-linux-arm64.tar.gz
        asset_content_type: application/gzip

    - name: Upload Linux arm Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/nrfb-linux-arm.tar.gz
        asset_name: fb-linux-arm.tar.gz
        asset_content_type: application/gzip

    - name: Upload Windows 386 Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/nrfb-windows-386.zip
        asset_name: fb-windows-386.zip
        asset_content_type: application/zip

    - name: Upload Windows amd64 Package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/nrfb-windows-amd64.zip
        asset_name: fb-windows-amd64.zip
        asset_content_type: application/zip
